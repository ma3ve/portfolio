{"version":3,"sources":["components/home/icons sync /^/.//.*/.svg$","components/home/icons/cpp.svg","components/home/icons/django.svg","components/home/icons/ethereum.svg","components/home/icons/git.svg","components/home/icons/javascript.svg","components/home/icons/mysql.svg","components/home/icons/nodejs.svg","components/home/icons/python.svg","components/home/icons/reactjs.svg","components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/ProjectCard.jsx","components/home/Project.jsx","components/Footer.jsx","components/Navbar.jsx","components/home/Skills.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MainBody","useState","Array","icons","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","className","devDesc","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","role","AboutMe","ProjectCard","props","name","description","github","live","Project","projects","project","Footer","backgroundColor","bgStyle","style","class","Navbar","isTop","setIsTop","useEffect","document","addEventListener","istop","window","scrollY","process","type","data-toggle","data-target","aria-controls","aria-expanded","src","require","alt","width","Home","Skills","App","basename","showNavigationbar","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4dcdd498.chunk.js","sourcesContent":["var map = {\n\t\"./cpp.svg\": 37,\n\t\"./django.svg\": 38,\n\t\"./ethereum.svg\": 39,\n\t\"./git.svg\": 40,\n\t\"./javascript.svg\": 41,\n\t\"./mysql.svg\": 42,\n\t\"./nodejs.svg\": 43,\n\t\"./python.svg\": 44,\n\t\"./reactjs.svg\": 45\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 36;","module.exports = __webpack_public_path__ + \"static/media/cpp.7219a99d.svg\";","module.exports = __webpack_public_path__ + \"static/media/django.a83558fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/ethereum.3dbfd3db.svg\";","module.exports = __webpack_public_path__ + \"static/media/git.e04514d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.8f263379.svg\";","module.exports = __webpack_public_path__ + \"static/media/mysql.540b3988.svg\";","module.exports = __webpack_public_path__ + \"static/media/nodejs.a3ad45d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/python.9d8653c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/reactjs.4c28ca5b.svg\";","import React, { useState } from \"react\";\nimport Typist from \"react-typist\";\nimport { devDesc, icons } from \"../configurations.json\";\n\nconst MainBody = () => {\n    const [hoverstatus, setHoverstatus] = useState(\n        new Array(icons.length).fill(\"socialicons\")\n    );\n\n    const toggleHover = (data) => {\n        const newhoverStatus = [...hoverstatus];\n\n        if (data.event === \"enter\") {\n            newhoverStatus[data.icon.id] = \"socialiconshover\";\n            return setHoverstatus(newhoverStatus);\n        } else if (data.event === \"leave\") {\n            newhoverStatus[data.icon.id] = \"socialicons\";\n            return setHoverstatus(newhoverStatus);\n        }\n    };\n\n    return (\n        <div>\n            <div\n                id=\"home\"\n                className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n            >\n                <div id=\"stars\"></div>\n                <div className=\"container container-fluid text-center \">\n                    <h2 className=\"display-1\">Mujammil Khan</h2>\n                    <Typist className=\"lead\">{devDesc}</Typist>\n                    <div className=\"p-5\">\n                        {icons.map((icon) => (\n                            <a\n                                key={icon.id}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={icon.url}\n                                aria-label={`My ${icon.image.split(\"-\")[1]}`}\n                            >\n                                <i\n                                    className={`${icon.image}  fa-3x ${\n                                        hoverstatus[icon.id]\n                                    }`}\n                                    onMouseOver={() =>\n                                        toggleHover({ icon, event: \"enter\" })\n                                    }\n                                    onMouseOut={() =>\n                                        toggleHover({ icon, event: \"leave\" })\n                                    }\n                                />\n                            </a>\n                        ))}\n                    </div>\n                    <a\n                        className=\"btn btn-outline-light btn-lg\"\n                        href=\"#aboutme\"\n                        role=\"button\"\n                        aria-label=\"Learn more about me\"\n                    >\n                        More about me\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MainBody;\n","import React from \"react\";\nconst AboutMe = () => {\n    return (\n        <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n            <div className=\"container container-fluid p-5\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <h1 className=\"display-4 mb-5 text-center\">About Me</h1>\n                        <p className=\"lead text-center\">\n                            I am a computer enginnering student studying at Army\n                            Institute of Technology, Pune. I am passionate about\n                            Blockchain and Web technologies and I like to learn\n                            and create new things which make life easier.\n                        </p>\n\n                        <p className=\"lead text-center\">\n                            <a\n                                className=\"btn btn-outline-dark btn-lg\"\n                                href=\"https://drive.google.com/file/d/1YKgq_URHdrCUXGVa9P5CX6kkW66Iw4kq/view?usp=sharing\"\n                                target=\"_blank\"\n                                rel=\"noreferrer noopener\"\n                                role=\"button\"\n                                aria-label=\"Resume/CV\"\n                            >\n                                Resume\n                            </a>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AboutMe;\n","import React from \"react\";\n\nconst ProjectCard = (props) => {\n    const { name, description, github, live } = props;\n    return (\n        <div className=\"col-md-6\">\n            <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{name} </h5>\n                    <p className=\"card-text\">{description} </p>\n                    {live && (\n                        <a\n                            href={live}\n                            target=\" _blank\"\n                            className=\"btn btn-outline-secondary mr-3\"\n                        >\n                            live\n                        </a>\n                    )}\n                    <a\n                        href={github}\n                        target=\" _blank\"\n                        className=\"btn btn-outline-secondary\"\n                    >\n                        <i className=\"fab fa-github\" /> Repo\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectCard;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport { projects } from \"./project.json\";\n\nconst Project = () => {\n    return (\n        <div id=\"projects\" className=\"jumbotron jumbotron-fluid  m-0\">\n            {projects.length && (\n                <div className=\"container container-fluid p-5\">\n                    <h1 className=\"display-4 pb-5\">Projects</h1>\n                    <div className=\"row\">\n                        {projects.map((project) => (\n                            <ProjectCard\n                                name={project.name}\n                                description={project.description}\n                                live={project.live}\n                                github={project.github}\n                            />\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Project;\n","import React, { useState } from \"react\";\n\nconst Footer = () => {\n    const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\n\n    return (\n        <footer style={bgStyle} className=\"mt-auto py-3 text-center\">\n            <div class=\"container\">\n                <h2 class=\"display-4 pb-3 text-center\">Get In Touch</h2>\n                <p class=\"lead text-center pb-3\">\n                    I'm currently looking for part-time Software Engineering\n                    opportunities! If you know of any positions available, if\n                    you have any questions, or if you just want to say hi,\n                    please feel free to email me at\n                    <a href=\"mailto:mujammilkhan321@gmail.com\">\n                        {\" mujammilkhan321@gmail.com\"}\n                    </a>\n                    .\n                </p>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\n\nconst Navbar = (props) => {\n    const [isTop, setIsTop] = useState(true);\n    useEffect(() => {\n        document.addEventListener(\"scroll\", () => {\n            const istop = window.scrollY < 200;\n            if (istop !== isTop) {\n                setIsTop(istop);\n            }\n        });\n    }, [isTop]);\n\n    return (\n        <nav\n            className={`navbar navbar-expand-lg fixed-top navbar-light ${\n                isTop ? \"bg-transparent\" : \"bg-gradient\"\n            } `}\n        >\n            <a\n                className=\"navbar-brand\"\n                href={process.env.PUBLIC_URL + \"/#home\"}\n            >\n                {`<Mujammil/>`}\n            </a>\n            <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarTogglerDemo02\"\n                aria-controls=\"navbarTogglerDemo02\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n            >\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <a\n                            className=\"nav-link lead\"\n                            href={process.env.PUBLIC_URL + \"/#projects\"}\n                        >\n                            Projects\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a\n                            className=\"nav-link lead\"\n                            href=\"https://drive.google.com/file/d/1YKgq_URHdrCUXGVa9P5CX6kkW66Iw4kq/view?usp=sharing\"\n                            target=\"_blank\"\n                            rel=\"noreferrer noopener\"\n                        >\n                            <b>Resume</b>\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a\n                            className=\"nav-link lead\"\n                            href={process.env.PUBLIC_URL + \"/#aboutme\"}\n                        >\n                            <b>About</b>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { icons } from \"./icons/icons.json\";\n\nconst AboutMe = () => {\n    return (\n        <div\n            id=\"skills\"\n            className=\"jumbotron jumbotron-fluid  bg-transparent m-0\"\n        >\n            <div className=\"container container-fluid p-5\">\n                <div className=\"row\">\n                    <div className={`col-lg-12`}>\n                        <h1 className=\"display-4 pb-5\">Skills</h1>\n                        <div className=\"row justify-content-center\">\n                            {icons.map((icon) => {\n                                return (\n                                    <div className=\"col-md-2 mt-4 col-sm-3 col-4\">\n                                        <img\n                                            src={require(`./icons/${icon}.svg`)}\n                                            alt=\"c\"\n                                            width=\"100%\"\n                                        />\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AboutMe;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./App.css\";\nimport { showNavigationbar } from \"./components/configurations.json\";\nimport MainBody from \"./components/home/MainBody\";\nimport AboutMe from \"./components/home/AboutMe\";\nimport Project from \"./components/home/Project\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\n\nimport Skills from \"./components/home/Skills\";\n\nconst Home = () => {\n    return (\n        <Fragment>\n            <MainBody />\n            <AboutMe />\n            <Skills />\n            <Project />\n        </Fragment>\n    );\n};\n\nconst App = () => (\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n        {showNavigationbar && <Navbar />}\n        <Route path=\"/\" exact component={Home} />\n        <Footer />\n    </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}